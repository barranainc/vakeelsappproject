{"ast":null,"code":"var _jsxFileName = \"/Users/muhammad/Documents/GitHub/Vakeelsappproject/vakeel-web/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Card, CardContent, Typography, TextField, IconButton, List, ListItem, ListItemText, ListItemAvatar, Avatar, Divider, Paper, Grid, Badge } from '@mui/material';\nimport { Send, Search, MoreVert, AttachFile, EmojiEmotions } from '@mui/icons-material';\nimport { Colors } from '../assets/styles/colors';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // TODO: Fetch contacts from API\n    setContacts([{\n      id: '1',\n      name: 'Ahmed Khan',\n      lastMessage: 'When is the next hearing?',\n      timestamp: '2:30 PM',\n      unreadCount: 2,\n      isOnline: true\n    }, {\n      id: '2',\n      name: 'Fatima Ali',\n      lastMessage: 'Thank you for the update',\n      timestamp: '1:45 PM',\n      unreadCount: 0,\n      isOnline: false\n    }, {\n      id: '3',\n      name: 'Muhammad Hassan',\n      lastMessage: 'I need to discuss the case details',\n      timestamp: '11:20 AM',\n      unreadCount: 1,\n      isOnline: true\n    }]);\n  }, []);\n  useEffect(() => {\n    if (selectedContact) {\n      // TODO: Fetch messages for selected contact\n      setMessages([{\n        id: '1',\n        sender: selectedContact.name,\n        content: 'Hello, how is the case proceeding?',\n        timestamp: '2:30 PM',\n        isOwn: false\n      }, {\n        id: '2',\n        sender: 'You',\n        content: 'The case is progressing well. We have a hearing next week.',\n        timestamp: '2:32 PM',\n        isOwn: true\n      }, {\n        id: '3',\n        sender: selectedContact.name,\n        content: 'That\\'s great! When exactly is the hearing?',\n        timestamp: '2:33 PM',\n        isOwn: false\n      }]);\n    }\n  }, [selectedContact]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleSendMessage = () => {\n    if (newMessage.trim() && selectedContact) {\n      const message = {\n        id: Date.now().toString(),\n        sender: 'You',\n        content: newMessage,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        isOwn: true\n      };\n      setMessages([...messages, message]);\n      setNewMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 'calc(100vh - 120px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      fontWeight: \"bold\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                borderBottom: `1px solid ${Colors.border}`\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Search contacts...\",\n                value: searchTerm,\n                onChange: e => setSearchTerm(e.target.value),\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 37\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              sx: {\n                p: 0,\n                maxHeight: 'calc(100vh - 200px)',\n                overflow: 'auto'\n              },\n              children: filteredContacts.map((contact, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: (selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact.id) === contact.id,\n                  onClick: () => setSelectedContact(contact),\n                  sx: {\n                    '&.Mui-selected': {\n                      backgroundColor: Colors.primaryLight,\n                      color: 'white'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      overlap: \"circular\",\n                      anchorOrigin: {\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      },\n                      badgeContent: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          width: 12,\n                          height: 12,\n                          borderRadius: '50%',\n                          backgroundColor: contact.isOnline ? Colors.success : Colors.gray400,\n                          border: '2px solid white'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 29\n                      }, this),\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        sx: {\n                          bgcolor: Colors.primary\n                        },\n                        children: contact.name.charAt(0)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        fontWeight: \"medium\",\n                        children: contact.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 29\n                      }, this), contact.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n                        badgeContent: contact.unreadCount,\n                        color: \"error\",\n                        sx: {\n                          '& .MuiBadge-badge': {\n                            fontSize: '0.75rem'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 27\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        noWrap: true,\n                        children: contact.lastMessage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"textSecondary\",\n                        children: contact.timestamp\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), index < filteredContacts.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 61\n                }, this)]\n              }, contact.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                borderBottom: `1px solid ${Colors.border}`,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  overlap: \"circular\",\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  badgeContent: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: 12,\n                      height: 12,\n                      borderRadius: '50%',\n                      backgroundColor: selectedContact.isOnline ? Colors.success : Colors.gray400,\n                      border: '2px solid white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      bgcolor: Colors.primary\n                    },\n                    children: selectedContact.name.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    fontWeight: \"bold\",\n                    children: selectedContact.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: selectedContact.isOnline ? 'Online' : 'Offline'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: 1,\n                p: 2,\n                overflow: 'auto',\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2\n              },\n              children: [messages.map(message => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: message.isOwn ? 'flex-end' : 'flex-start'\n                },\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 2,\n                    maxWidth: '70%',\n                    backgroundColor: message.isOwn ? Colors.primary : Colors.gray100,\n                    color: message.isOwn ? 'white' : 'inherit'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mt: 0.5,\n                      opacity: 0.7\n                    },\n                    children: message.timestamp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)\n              }, message.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                borderTop: `1px solid ${Colors.border}`,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Type a message...\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: handleKeyPress,\n                multiline: true,\n                maxRows: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(EmojiEmotions, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !newMessage.trim(),\n                sx: {\n                  backgroundColor: Colors.primary,\n                  color: 'white',\n                  '&:hover': {\n                    backgroundColor: Colors.primaryDark\n                  },\n                  '&.Mui-disabled': {\n                    backgroundColor: Colors.gray300,\n                    color: Colors.gray500\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"textSecondary\",\n              children: \"Select a contact to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"D5G0FF59Vv4t0duG4KFV/OFFAi0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Card","CardContent","Typography","TextField","IconButton","List","ListItem","ListItemText","ListItemAvatar","Avatar","Divider","Paper","Grid","Badge","Send","Search","MoreVert","AttachFile","EmojiEmotions","Colors","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","contacts","setContacts","selectedContact","setSelectedContact","messages","setMessages","newMessage","setNewMessage","searchTerm","setSearchTerm","messagesEndRef","id","name","lastMessage","timestamp","unreadCount","isOnline","sender","content","isOwn","_messagesEndRef$curre","current","scrollIntoView","behavior","filteredContacts","filter","contact","toLowerCase","includes","handleSendMessage","trim","message","Date","now","toString","toLocaleTimeString","hour","minute","handleKeyPress","e","key","shiftKey","preventDefault","sx","height","children","variant","component","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","p","borderBottom","border","fullWidth","placeholder","value","onChange","target","InputProps","startAdornment","maxHeight","overflow","map","index","button","selected","onClick","backgroundColor","primaryLight","color","overlap","anchorOrigin","vertical","horizontal","badgeContent","width","borderRadius","success","gray400","bgcolor","primary","charAt","display","justifyContent","alignItems","fontSize","secondary","noWrap","length","flexDirection","gap","flex","maxWidth","gray100","mt","opacity","ref","borderTop","onKeyPress","multiline","maxRows","disabled","primaryDark","gray300","gray500","_c","$RefreshReg$"],"sources":["/Users/muhammad/Documents/GitHub/Vakeelsappproject/vakeel-web/src/pages/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  Paper,\n  Grid,\n  Badge,\n} from '@mui/material';\nimport {\n  Send,\n  Search,\n  MoreVert,\n  AttachFile,\n  EmojiEmotions,\n} from '@mui/icons-material';\nimport { Colors } from '../assets/styles/colors';\n\ninterface Message {\n  id: string;\n  sender: string;\n  content: string;\n  timestamp: string;\n  isOwn: boolean;\n}\n\ninterface ChatContact {\n  id: string;\n  name: string;\n  lastMessage: string;\n  timestamp: string;\n  unreadCount: number;\n  avatar?: string;\n  isOnline: boolean;\n}\n\nconst Chat: React.FC = () => {\n  const [contacts, setContacts] = useState<ChatContact[]>([]);\n  const [selectedContact, setSelectedContact] = useState<ChatContact | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // TODO: Fetch contacts from API\n    setContacts([\n      {\n        id: '1',\n        name: 'Ahmed Khan',\n        lastMessage: 'When is the next hearing?',\n        timestamp: '2:30 PM',\n        unreadCount: 2,\n        isOnline: true,\n      },\n      {\n        id: '2',\n        name: 'Fatima Ali',\n        lastMessage: 'Thank you for the update',\n        timestamp: '1:45 PM',\n        unreadCount: 0,\n        isOnline: false,\n      },\n      {\n        id: '3',\n        name: 'Muhammad Hassan',\n        lastMessage: 'I need to discuss the case details',\n        timestamp: '11:20 AM',\n        unreadCount: 1,\n        isOnline: true,\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (selectedContact) {\n      // TODO: Fetch messages for selected contact\n      setMessages([\n        {\n          id: '1',\n          sender: selectedContact.name,\n          content: 'Hello, how is the case proceeding?',\n          timestamp: '2:30 PM',\n          isOwn: false,\n        },\n        {\n          id: '2',\n          sender: 'You',\n          content: 'The case is progressing well. We have a hearing next week.',\n          timestamp: '2:32 PM',\n          isOwn: true,\n        },\n        {\n          id: '3',\n          sender: selectedContact.name,\n          content: 'That\\'s great! When exactly is the hearing?',\n          timestamp: '2:33 PM',\n          isOwn: false,\n        },\n      ]);\n    }\n  }, [selectedContact]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleSendMessage = () => {\n    if (newMessage.trim() && selectedContact) {\n      const message: Message = {\n        id: Date.now().toString(),\n        sender: 'You',\n        content: newMessage,\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n        isOwn: true,\n      };\n      setMessages([...messages, message]);\n      setNewMessage('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <Box sx={{ height: 'calc(100vh - 120px)' }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom fontWeight=\"bold\">\n        Chat\n      </Typography>\n\n      <Grid container spacing={2} sx={{ height: '100%' }}>\n        {/* Contacts List */}\n        <Grid item xs={12} md={4}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent sx={{ p: 0 }}>\n              <Box sx={{ p: 2, borderBottom: `1px solid ${Colors.border}` }}>\n                <TextField\n                  fullWidth\n                  placeholder=\"Search contacts...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  InputProps={{\n                    startAdornment: <Search />,\n                  }}\n                />\n              </Box>\n\n              <List sx={{ p: 0, maxHeight: 'calc(100vh - 200px)', overflow: 'auto' }}>\n                {filteredContacts.map((contact, index) => (\n                  <React.Fragment key={contact.id}>\n                    <ListItem\n                      button\n                      selected={selectedContact?.id === contact.id}\n                      onClick={() => setSelectedContact(contact)}\n                      sx={{\n                        '&.Mui-selected': {\n                          backgroundColor: Colors.primaryLight,\n                          color: 'white',\n                        },\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Badge\n                          overlap=\"circular\"\n                          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                          badgeContent={\n                            <Box\n                              sx={{\n                                width: 12,\n                                height: 12,\n                                borderRadius: '50%',\n                                backgroundColor: contact.isOnline ? Colors.success : Colors.gray400,\n                                border: '2px solid white',\n                              }}\n                            />\n                          }\n                        >\n                          <Avatar sx={{ bgcolor: Colors.primary }}>\n                            {contact.name.charAt(0)}\n                          </Avatar>\n                        </Badge>\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                            <Typography variant=\"subtitle2\" fontWeight=\"medium\">\n                              {contact.name}\n                            </Typography>\n                            {contact.unreadCount > 0 && (\n                              <Badge\n                                badgeContent={contact.unreadCount}\n                                color=\"error\"\n                                sx={{ '& .MuiBadge-badge': { fontSize: '0.75rem' } }}\n                              />\n                            )}\n                          </Box>\n                        }\n                        secondary={\n                          <Box>\n                            <Typography variant=\"body2\" color=\"textSecondary\" noWrap>\n                              {contact.lastMessage}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                              {contact.timestamp}\n                            </Typography>\n                          </Box>\n                        }\n                      />\n                    </ListItem>\n                    {index < filteredContacts.length - 1 && <Divider />}\n                  </React.Fragment>\n                ))}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Chat Area */}\n        <Grid item xs={12} md={8}>\n          <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n            {selectedContact ? (\n              <>\n                {/* Chat Header */}\n                <Box\n                  sx={{\n                    p: 2,\n                    borderBottom: `1px solid ${Colors.border}`,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Badge\n                      overlap=\"circular\"\n                      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                      badgeContent={\n                        <Box\n                          sx={{\n                            width: 12,\n                            height: 12,\n                            borderRadius: '50%',\n                            backgroundColor: selectedContact.isOnline ? Colors.success : Colors.gray400,\n                            border: '2px solid white',\n                          }}\n                        />\n                      }\n                    >\n                      <Avatar sx={{ bgcolor: Colors.primary }}>\n                        {selectedContact.name.charAt(0)}\n                      </Avatar>\n                    </Badge>\n                    <Box>\n                      <Typography variant=\"h6\" fontWeight=\"bold\">\n                        {selectedContact.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {selectedContact.isOnline ? 'Online' : 'Offline'}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  <IconButton>\n                    <MoreVert />\n                  </IconButton>\n                </Box>\n\n                {/* Messages */}\n                <Box\n                  sx={{\n                    flex: 1,\n                    p: 2,\n                    overflow: 'auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 2,\n                  }}\n                >\n                  {messages.map((message) => (\n                    <Box\n                      key={message.id}\n                      sx={{\n                        display: 'flex',\n                        justifyContent: message.isOwn ? 'flex-end' : 'flex-start',\n                      }}\n                    >\n                      <Paper\n                        sx={{\n                          p: 2,\n                          maxWidth: '70%',\n                          backgroundColor: message.isOwn ? Colors.primary : Colors.gray100,\n                          color: message.isOwn ? 'white' : 'inherit',\n                        }}\n                      >\n                        <Typography variant=\"body2\">{message.content}</Typography>\n                        <Typography\n                          variant=\"caption\"\n                          sx={{\n                            display: 'block',\n                            mt: 0.5,\n                            opacity: 0.7,\n                          }}\n                        >\n                          {message.timestamp}\n                        </Typography>\n                      </Paper>\n                    </Box>\n                  ))}\n                  <div ref={messagesEndRef} />\n                </Box>\n\n                {/* Message Input */}\n                <Box\n                  sx={{\n                    p: 2,\n                    borderTop: `1px solid ${Colors.border}`,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                  }}\n                >\n                  <IconButton>\n                    <AttachFile />\n                  </IconButton>\n                  <TextField\n                    fullWidth\n                    placeholder=\"Type a message...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    multiline\n                    maxRows={4}\n                  />\n                  <IconButton>\n                    <EmojiEmotions />\n                  </IconButton>\n                  <IconButton\n                    onClick={handleSendMessage}\n                    disabled={!newMessage.trim()}\n                    sx={{\n                      backgroundColor: Colors.primary,\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: Colors.primaryDark,\n                      },\n                      '&.Mui-disabled': {\n                        backgroundColor: Colors.gray300,\n                        color: Colors.gray500,\n                      },\n                    }}\n                  >\n                    <Send />\n                  </IconButton>\n                </Box>\n              </>\n            ) : (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                }}\n              >\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Select a contact to start chatting\n                </Typography>\n              </Box>\n            )}\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}